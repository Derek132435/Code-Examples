#!/bin/bash

# Derek Edwards
# 7/19/16
# Compares Directories passed on the command line in BASH

debug=

if [ -n "$debug" ] ; then echo "debug starting..." ; fi

doRecurse=
doDiff=
declare -a baseDir
declare -a modDir
baseDirName=
modDirName=

#compdir [-R] [-D] <base_dir> <mod_dir>

# testing args
for op in "$@";
do

	if [ ${op:0:1} = "-" ] ; then
		if [ -n "$debug" ]; then echo "debug: option ${op:1:1}"; fi

		if [ ${op:1:1} = "R" ]; then 
			doRecurse=yes
		elif [ ${op:1:1} = "D" ]; then 
			doDiff=yes
		fi
	elif [ -d "${op}" ]; then 
		if [ -z "$baseDirName" ]; then
			baseDirName=$op
		elif [ -z "$modDirName" ]; then
			modDirName=$op
		fi
	else
		if [ -n "$debug" ]; then echo "debug: invalid argument: ${op}"; fi
	fi
done

if [ -n "$doRecurse" ]; then 
	baseDir=(`find ${baseDirName} -mindepth 1 -type f -printf "%P\n"`)
	modDir=(`find ${modDirName} -mindepth 1 -type f -printf "%P\n"`)
else
	baseDir=(`find ${baseDirName} -mindepth 1 -maxdepth 1 -type f -printf "%P\n"`)
	modDir=(`find ${modDirName} -mindepth 1 -maxdepth 1 -type f -printf "%P\n"`)
fi

if [ -n "$debug" ]; then echo "debug: printing- baseDir: " ${baseDir[*]}; fi
if [ -n "$debug" ]; then echo "debug: printing- modDir: " ${modDir[*]}; fi

deleted=
new=

# iterate through array using a counter
if [ -n "$debug" ]; then echo "debug: executing for loop 1"; fi
for ((i=0; i<${#baseDir[@]}; i++)); do
	deleted=true
	#do something to each element of array
	for ((j=0; j<${#modDir[@]}; j++)); do
		if [ "${baseDir[i]}" = "${modDir[j]}" ] ; then
			deleted=false
			if [ -n "$debug" ]; then echo "debug: getting timestamp of ${baseDir[i]} and ${modDir[j]}"; fi
			stamp1=`stat --format %Y $baseDirName/${baseDir[i]}`
			stamp2=`stat --format %Y $modDirName/${modDir[j]}`
			if [[ $stamp1 < $stamp2 ]] ; then 
				echo "${baseDir[i]}: MODIFIED"
				if [ -n "$doDiff" ]; then 
					diff $baseDirName/${baseDir[i]} $modDirName/${modDir[j]}
				fi
			fi
		fi
	done
	if [ "$deleted" = true ]; then echo "${baseDir[i]}: DELETED"; fi
done

if [ -n "$debug" ]; then echo "debug: executing for loop 2"; fi
for ((i=0; i<${#modDir[@]}; i++)); do
	new=true
	#do something to each element of array
	for ((j=0; j<${#baseDir[@]}; j++)); do
		if [ "${modDir[i]}" = "${baseDir[j]}" ] ; then
			new=false
		fi
	done
	if [ "$new" = true ]; then echo "${modDir[i]}: NEW"; fi
done

if [ -n "$debug" ] ; then echo "debug ending..." ; fi

exit 0